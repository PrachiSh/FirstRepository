#lang racket
(require rackunit)
(require "extras.rkt")
(require 2htdp/universe)
(require 2htdp/image)
(define CAT-IMAGE (bitmap "cat.png"))
(define CANVAS-WIDTH 200)
(define CANVAS-HEIGHT 400)
(define EMPTY-CANVAS (empty-scene CANVAS-WIDTH CANVAS-HEIGHT))
(define CAT-X-COORD (/ CANVAS-WIDTH 2))
(define unpaused-world-at-20 (make-world 20 false))  
(define paused-world-at-20   (make-world 20 true))
(define unpaused-world-at-28 (make-world 28 false))  
(define paused-world-at-28   (make-world 28 true))
(define (is-pause-key-event? ke)
  (key=? ke " "))
(define pause-key-event " ")
(define non-pause-key-event "q")
(define (world-after-tick w)
  (if (world-paused? w)
      w
      (make-world (+ (world-pos w) CATSPEED)
                  (world-paused? w))))
(begin-for-test
  (check-equal? 
    (world-after-tick unpaused-world-at-20) 
    unpaused-world-at-28
    "in unpaused world, the cat should fall CATSPEED pixels and world should still be unpaused")

  (check-equal? 
    (world-after-tick paused-world-at-20)
    paused-world-at-20
    "in paused world, cat should be unmoved"))
(define (world-to-scene w)
  (place-image CAT-IMAGE CAT-X-COORD
               (world-pos w)
               EMPTY-CANVAS))
(define image-at-20 (place-image CAT-IMAGE CAT-X-COORD 20 EMPTY-CANVAS))
(begin-for-test
  (check-equal? 
    (world-to-scene unpaused-world-at-20)
    image-at-20
    "test of (world-to-scene unpaused-world-at-20)")

  (check-equal?
    (world-to-scene paused-world-at-20)
    image-at-20
    "test of (world-to-scene paused-world-at-20)"))
(define (world-after-key-event w kev)
  (if (is-pause-key-event? kev)
    (world-with-paused-toggled w)
    w))
(define (world-with-paused-toggled w)
  (make-world
   (world-pos w)
   (not (world-paused? w))))
(begin-for-test
  (check-equal?
    (world-after-key-event paused-world-at-20 pause-key-event)
    unpaused-world-at-20
    "after pause key, a paused world should become unpaused")

  (check-equal?
    (world-after-key-event unpaused-world-at-20 pause-key-event)
    paused-world-at-20
    "after pause key, an unpaused world should become paused")

  (check-equal?
    (world-after-key-event paused-world-at-20 non-pause-key-event)
    paused-world-at-20
    "after a non-pause key, a paused world should be unchanged")

  (check-equal?
    (world-after-key-event unpaused-world-at-20 non-pause-key-event)
    unpaused-world-at-20
    "after a non-pause key, an unpaused world should be unchanged"))

